proc float melCalculator(string $operation, float $numbers[]) {
    float $result = 0.0;
    
    if ($operation == "add") {
        for ($number in $numbers) {
            $result += $number;
        }
        print ("Adding ");
        for ($i = 0; $i < size($numbers); $i++) {
            print($numbers[$i]);
            if ($i < size($numbers) - 1)
                print(" + ");
        }
        print(" = " + $result + "\n");
    } 
    else if ($operation == "subtract") {
        if (size($numbers) < 2) {
            error("Subtraction requires at least two numbers.\n");
            return 0.0;
        }
        $result = $numbers[0];
        for ($i = 1; $i < size($numbers); $i++) {
            $result -= $numbers[$i];
        }
        print ("Subtracting ");
        for ($i = 0; $i < size($numbers); $i++) {
            print($numbers[$i]);
            if ($i < size($numbers) - 1)
                print(" - ");
        }
        print(" = " + $result + "\n");
    } 
    else if ($operation == "multiply") {
        $result = 1.0;
        for ($number in $numbers) {
            $result *= $number;
        }
        print ("Multiplying ");
        for ($i = 0; $i < size($numbers); $i++) {
            print($numbers[$i]);
            if ($i < size($numbers) - 1)
                print(" ร ");
        }
        print(" = " + $result + "\n");
    } 
    else if ($operation == "divide") {
        if (size($numbers) < 2) {
            error("Division requires at least two numbers.\n");
            return 0.0;
        }
        $result = $numbers[0];
        for ($i = 1; $i < size($numbers); $i++) {
            if ($numbers[$i] != 0) {
                $result /= $numbers[$i];
            } else {
                error("Division by zero is not allowed.\n");
                return 0.0;
            }
        }
        print ("Dividing ");
        for ($i = 0; $i < size($numbers); $i++) {
            print($numbers[$i]);
            if ($i < size($numbers) - 1)
                print(" รท ");
        }
        print(" = " + $result + "\n");
    }
    else if ($operation == "power") {
        if (size($numbers) != 2) {
            error("Power operation requires exactly two numbers.\n");
            return 0.0;
        }
        $result = pow($numbers[0], $numbers[1]);
        print ($numbers[0] + " raised to the power of " + $numbers[1] + " = " + $result + "\n");
    }
    else if ($operation == "mean") {
        if (size($numbers) == 0) {
            error("Mean operation requires at least one number.\n");
            return 0.0;
        }
        float $sum = 0.0;
        for ($number in $numbers) {
            $sum += $number;
        }
        $result = $sum / size($numbers);
        print ("Mean of ");
        for ($i = 0; $i < size($numbers); $i++) {
            print($numbers[$i]);
            if ($i < size($numbers) - 1)
                print(" + ");
        }
        print(" = " + $result + "\n");
    }
    else if ($operation == "median") {
        if (size($numbers) == 0) {
            error("Median operation requires at least one number.\n");
            return 0.0;
        }
        float $sortedNumbers[] = `sort $numbers`;
        if (size($sortedNumbers) % 2 == 0) {
            int $midIndex = size($sortedNumbers) / 2;
            $result = ($sortedNumbers[$midIndex - 1] + $sortedNumbers[$midIndex]) / 2;
        } else {
            int $midIndex = (size($sortedNumbers) - 1) / 2;
            $result = $sortedNumbers[$midIndex];
        }
        print ("Median of ");
        for ($i = 0; $i < size($numbers); $i++) {
            print($numbers[$i]);
            if ($i < size($numbers) - 1)
                print(", ");
        }
        print(" = " + $result + "\n");
    }
    else {
        error("Invalid operation. Use 'add', 'subtract', 'multiply', 'divide', 'power', 'mean', or 'median'.\n");
        return 0.0;
    }
    
    return $result;
}

// Example usage:
// melCalculator("add", {5.0, 3.0, 2.0}); // Add 5, 3, and 2
// melCalculator("subtract", {10.0, 4.0, 2.0}); // Subtract 4 and 2 from 10
// melCalculator("multiply", {6.0, 2.0, 4.0}); // Multiply 6, 2, and 4
// melCalculator("divide", {8.0, 2.0, 2.0}); // Divide 8 by 2 and 2
// melCalculator("power", {2.0, 3.0}); // 2 raised to the power of 3
// melCalculator("mean", {4.0, 6.0, 8.0}); // Mean of 4, 6, and 8
// melCalculator("median", {7.0, 3.0, 5.0, 1.0}); // Median of 7, 3, 5, and 1
